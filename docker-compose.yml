services:
  # PostgreSQL
  database:
    image: postgres:18-alpine
    container_name: stampee-database
    restart: unless-stopped
    environment:
      POSTGRES_DB: stampee_contacts
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - stampee-network

  # Backend
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: stampee-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@database:5432/stampee_contacts
      JWT_SECRET: your_super_secret_jwt_key_change_in_production_minimum_32_chars
      PORT: 3000
      NODE_ENV: production
      FRONTEND_URL: http://localhost:8080
    depends_on:
      database:
        condition: service_healthy
    networks:
      - stampee-network
    command: sh -c "pnpm db:push && node dist/index.js"

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:3000/api
    container_name: stampee-frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - stampee-network

volumes:
  postgres_data:
    driver: local

networks:
  stampee-network:
    driver: bridge